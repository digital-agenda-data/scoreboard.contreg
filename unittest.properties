# The application's display name
application.displayName=CR Unittesting

# The name of the template JSP file that will be used to give the pages their look and feel.
# Must reside in the webapp's /pages/common/ directory. This must property must not be empty!
templateJsp=templateEionet.jsp

# Folder where CR's Access Control Lists (ACL, http://en.wikipedia.org/wiki/Access_control_list) are stored.
application.acl.folder=./acl

# The application's home URL. It should be a full URL up to the webapp context path (the latter being included).
# Examples:
#    http://127.0.0.1:8080/cr
#    http://cr.eionet.europa.eu
# This property is used to construct URLs of users' home directories. The latter, in turn, is used to construct
# URLs of user's registrations, bookmarks, etc.
application.homeURL=http://127.0.0.1/cr

# Location of the folder where harvester collects its temporary files.
harvester.tempFileDir=./tmp

# The clock hours (0-23) when batch harvesting should be active, given as comma separated from-to spans (e.g 10-15, 19-23),
# where in every span both from and to are inclusive and there must be from<=to (so, to say from 18.00 to 9.00 you must write 18-23,0-8)
# (leave completely empty to disable any batch harvesting)
harvester.batchHarvestingHours=

# Interval (in seconds) at which CR checks for new urgent or scheduled harvests.
harvester.batchHarvestingIntervalSeconds=20

# Upper limit for the number of sources that are harvested in each interval
harvester.batchHarvestingUpperLimit=

# Default harvesting interval (in minutes) for new auto-detected harvest sources.
harvester.referrals.intervalMinutes=60480

# Maximum content length of a source. Not checked if not entered
harvester.maximumContentLength=

# Time in milliseconds after which the harvester gives up on establishing a HTTP connection to the harvested source or reading from
# that connection. NB! This is not the "whole" timeout: if connection is established and bytes are read, no HTTP timeout occurs.
# If no value given here, the harvester uses the total timeout calculated for the particular harvest at question.
harvester.httpConnection.timeout=

# Standard JavaMail (http://java.sun.com/products/javamail) properties that CR
# should use for sending error notification e-mails. For a complete reference see page 61 of
# http://java.sun.com/products/javamail/JavaMail-1.4.pdf.
# The mail.user and mail.password are not mandatory if the SMTP host does not require authentication.
# To turn off notifications, simply leave "mail.host" empty.
mail.host=
mail.user=
mail.password=
mail.from=continousintegration@dom.ain

# The comma-separated list of e-mail addresses of CR system administrators. Error
# notifications will be delivered to those addresses. This is NOT a standard JavaMail property!
mail.sysAdmins=no-reply@eea.europa.eu

# Folder where the application stores uploaded files.
filestore.path=./filestore

# Folder where EEA template files are stored
application.eea.template.folder=./eeaTemplate

# Interval (ms) for updating the picklist in Delivery search
#deliverySearchPicklistCacheUpdateInterval=3600000
deliverySearchPicklistCacheUpdateInterval=

# Interval (ms) for updating the cache of recently discovered files.
#recentDiscoveredFilesCacheUpdateInterval=300000
recentDiscoveredFilesCacheUpdateInterval=

# Interval (ms) for updating the cache of distinct rdf:types in CR triple store.
#typeCacheUpdateInterval=3600000
typeCacheUpdateInterval=

# Interval (ms) for updating the tag cloud cache.
#tagCloudCacheUpdateInterval=7200000
tagCloudCacheUpdateInterval=

# Cron schedule for updating rdf:type cache tables in database - this may take more than 15 minutes!
#typeCacheTablesUpdateCronJob=0 30 5 ? * *
typeCacheTablesUpdateCronJob=

# Virtuoso db connection properties.
#virtuoso.db.url=jdbc:virtuoso://localhost:1111/charset=UTF-8/log_enable=2
virtuoso.db.url=
virtuoso.db.drv=virtuoso.jdbc3.Driver
virtuoso.db.usr=not-dba
virtuoso.db.pwd=not-dba

virtuoso.db.rousr=readonly-user
virtuoso.db.ropwd=readonly-user

# Database connection properties to be used by unit tests.
#virtuoso.unittest.db.url=jdbc:virtuoso://localhost:1112/charset=UTF-8/log_enable=2
virtuoso.unittest.db.url=
virtuoso.unittest.db.usr=cr3test
virtuoso.unittest.db.pwd=zzz

# If true, CR will use a Central Authentication Service (CAS, http://www.jasig.org/cas) for authenticating its users.
# In such a case, the below "edu.yale.its.tp.cas.client.filter.*" properties *must* be specified!
# If false, CR will use an LDAP server and a local user description file for the user authentication.
# In such a case, the LDAP server URL *must* be specified with "ldap.url" property. The local user
# description file is located in users.xml in the directory specified by "application.acl.folder".
# Default value of this property is true, i.e. use CAS for user authentication.
useCentralAuthenticationService=true

# Relevant only if useCentralAuthenticationService=true. Specifies the URL to the login page on CAS server.
# See Java's CAS client JavaDoc for further comments.
edu.yale.its.tp.cas.client.filter.loginUrl=https://sso.eionet.europa.eu/login

# Relevant only if useCentralAuthenticationService=true. Specifies the URL to the validation service on CAS server.
# See Java's CAS client JavaDoc for further comments.
edu.yale.its.tp.cas.client.filter.validateUrl=https://sso.eionet.europa.eu/serviceValidate

# Relevant only if useCentralAuthenticationService=true.
# Specifies the host and port to where the CAS login service should redirect the browser after successful login.
# This is basically your CR webapp host and port (examples: "127.0.0.1:8080", "cr.eionet.europa.eu").
edu.yale.its.tp.cas.client.filter.serverName=127.0.0.1:8080

# Relevant only if useCentralAuthenticationService=false.
# Specifies the URL to your LDAP server that you wish to use for user authentication. NB! Must end with a slash!
ldap.url=ldap://ldap.eionet.europa.eu:389/

# Relevant only if useCentralAuthenticationService=false.
# Specifies the LDAP context in which the users shall be looked up. In other words:
# ldap.url + ldap.context forms the "java.naming.provider.url" that the application will use for user lookup.
ldap.context=o=Eionet,l=EUROPE

# If true, enables functionality specific to the European Environment Agency (EEA).
# If false, all EEA-specific menu items and functions will be hidden or disabled.
# Default value is true.
enableEEAFunctionality=true

# Comma-separated list of hosts allowed to use CR's ping API (PingActionBean). Wildcards can be used. Can be left empty.
# The list is always prepended by with "localhost", "127.0.0.1", "0:0:0:0:0:0:0:1" and "::1".
pingWhitelist=*.eea.europa.eu,*.eionet.europa.eu,192.168.1.*
